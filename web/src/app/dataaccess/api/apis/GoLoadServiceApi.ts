/* tslint:disable */
/* eslint-disable */
/**
 * go_load/v1/go_load.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  RpcStatus,
  StreamResultOfV1GetDownloadTaskFileResponse,
  V1CreateAccountRequest,
  V1CreateAccountResponse,
  V1CreateDownloadTaskRequest,
  V1CreateDownloadTaskResponse,
  V1CreateSessionRequest,
  V1CreateSessionResponse,
  V1DeleteDownloadTaskRequest,
  V1GetDownloadTaskFileRequest,
  V1GetDownloadTaskListRequest,
  V1GetDownloadTaskListResponse,
  V1UpdateDownloadTaskRequest,
  V1UpdateDownloadTaskResponse,
} from '../models/index';
import {
    RpcStatusFromJSON,
    RpcStatusToJSON,
    StreamResultOfV1GetDownloadTaskFileResponseFromJSON,
    StreamResultOfV1GetDownloadTaskFileResponseToJSON,
    V1CreateAccountRequestFromJSON,
    V1CreateAccountRequestToJSON,
    V1CreateAccountResponseFromJSON,
    V1CreateAccountResponseToJSON,
    V1CreateDownloadTaskRequestFromJSON,
    V1CreateDownloadTaskRequestToJSON,
    V1CreateDownloadTaskResponseFromJSON,
    V1CreateDownloadTaskResponseToJSON,
    V1CreateSessionRequestFromJSON,
    V1CreateSessionRequestToJSON,
    V1CreateSessionResponseFromJSON,
    V1CreateSessionResponseToJSON,
    V1DeleteDownloadTaskRequestFromJSON,
    V1DeleteDownloadTaskRequestToJSON,
    V1GetDownloadTaskFileRequestFromJSON,
    V1GetDownloadTaskFileRequestToJSON,
    V1GetDownloadTaskListRequestFromJSON,
    V1GetDownloadTaskListRequestToJSON,
    V1GetDownloadTaskListResponseFromJSON,
    V1GetDownloadTaskListResponseToJSON,
    V1UpdateDownloadTaskRequestFromJSON,
    V1UpdateDownloadTaskRequestToJSON,
    V1UpdateDownloadTaskResponseFromJSON,
    V1UpdateDownloadTaskResponseToJSON,
} from '../models/index';

export interface GoLoadServiceCreateAccountRequest {
    body: V1CreateAccountRequest;
}

export interface GoLoadServiceCreateDownloadTaskRequest {
    body: V1CreateDownloadTaskRequest;
}

export interface GoLoadServiceCreateSessionRequest {
    body: V1CreateSessionRequest;
}

export interface GoLoadServiceDeleteDownloadTaskRequest {
    body: V1DeleteDownloadTaskRequest;
}

export interface GoLoadServiceGetDownloadTaskFileRequest {
    body: V1GetDownloadTaskFileRequest;
}

export interface GoLoadServiceGetDownloadTaskListRequest {
    body: V1GetDownloadTaskListRequest;
}

export interface GoLoadServiceUpdateDownloadTaskRequest {
    body: V1UpdateDownloadTaskRequest;
}

/**
 * 
 */
export class GoLoadServiceApi extends runtime.BaseAPI {

    /**
     */
    async goLoadServiceCreateAccountRaw(requestParameters: GoLoadServiceCreateAccountRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<V1CreateAccountResponse>> {
        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling goLoadServiceCreateAccount.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/go_load.v1.GoLoadService/CreateAccount`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: V1CreateAccountRequestToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => V1CreateAccountResponseFromJSON(jsonValue));
    }

    /**
     */
    async goLoadServiceCreateAccount(requestParameters: GoLoadServiceCreateAccountRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<V1CreateAccountResponse> {
        const response = await this.goLoadServiceCreateAccountRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async goLoadServiceCreateDownloadTaskRaw(requestParameters: GoLoadServiceCreateDownloadTaskRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<V1CreateDownloadTaskResponse>> {
        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling goLoadServiceCreateDownloadTask.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/go_load.v1.GoLoadService/CreateDownloadTask`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: V1CreateDownloadTaskRequestToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => V1CreateDownloadTaskResponseFromJSON(jsonValue));
    }

    /**
     */
    async goLoadServiceCreateDownloadTask(requestParameters: GoLoadServiceCreateDownloadTaskRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<V1CreateDownloadTaskResponse> {
        const response = await this.goLoadServiceCreateDownloadTaskRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async goLoadServiceCreateSessionRaw(requestParameters: GoLoadServiceCreateSessionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<V1CreateSessionResponse>> {
        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling goLoadServiceCreateSession.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/go_load.v1.GoLoadService/CreateSession`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: V1CreateSessionRequestToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => V1CreateSessionResponseFromJSON(jsonValue));
    }

    /**
     */
    async goLoadServiceCreateSession(requestParameters: GoLoadServiceCreateSessionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<V1CreateSessionResponse> {
        const response = await this.goLoadServiceCreateSessionRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async goLoadServiceDeleteDownloadTaskRaw(requestParameters: GoLoadServiceDeleteDownloadTaskRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling goLoadServiceDeleteDownloadTask.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/go_load.v1.GoLoadService/DeleteDownloadTask`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: V1DeleteDownloadTaskRequestToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     */
    async goLoadServiceDeleteDownloadTask(requestParameters: GoLoadServiceDeleteDownloadTaskRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.goLoadServiceDeleteDownloadTaskRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async goLoadServiceGetDownloadTaskFileRaw(requestParameters: GoLoadServiceGetDownloadTaskFileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<StreamResultOfV1GetDownloadTaskFileResponse>> {
        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling goLoadServiceGetDownloadTaskFile.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/go_load.v1.GoLoadService/GetDownloadTaskFile`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: V1GetDownloadTaskFileRequestToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => StreamResultOfV1GetDownloadTaskFileResponseFromJSON(jsonValue));
    }

    /**
     */
    async goLoadServiceGetDownloadTaskFile(requestParameters: GoLoadServiceGetDownloadTaskFileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<StreamResultOfV1GetDownloadTaskFileResponse> {
        const response = await this.goLoadServiceGetDownloadTaskFileRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async goLoadServiceGetDownloadTaskListRaw(requestParameters: GoLoadServiceGetDownloadTaskListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<V1GetDownloadTaskListResponse>> {
        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling goLoadServiceGetDownloadTaskList.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/go_load.v1.GoLoadService/GetDownloadTaskList`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: V1GetDownloadTaskListRequestToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => V1GetDownloadTaskListResponseFromJSON(jsonValue));
    }

    /**
     */
    async goLoadServiceGetDownloadTaskList(requestParameters: GoLoadServiceGetDownloadTaskListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<V1GetDownloadTaskListResponse> {
        const response = await this.goLoadServiceGetDownloadTaskListRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async goLoadServiceUpdateDownloadTaskRaw(requestParameters: GoLoadServiceUpdateDownloadTaskRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<V1UpdateDownloadTaskResponse>> {
        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling goLoadServiceUpdateDownloadTask.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/go_load.v1.GoLoadService/UpdateDownloadTask`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: V1UpdateDownloadTaskRequestToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => V1UpdateDownloadTaskResponseFromJSON(jsonValue));
    }

    /**
     */
    async goLoadServiceUpdateDownloadTask(requestParameters: GoLoadServiceUpdateDownloadTaskRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<V1UpdateDownloadTaskResponse> {
        const response = await this.goLoadServiceUpdateDownloadTaskRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
